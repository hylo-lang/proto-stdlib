trait Identifiable {

  type ID: Equatable

  let id: ID

}

extension Self: Equatale where Self: Identifiable {

  infix fun == (_ l: Self, : r: Self) -> Bool { l.id == r.id }

}

extension Self: Hashable where Self: Identifiable, Self.ID: Hashable {

  fun hash<Hasher: HasherTrait>(into hasher: inout Hasher) {
    id.hash(into: &hasher)
  }

}